steps:
  # Step 1: Set up Terraform
  - name: 'hashicorp/terraform:1.5'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        echo "Setting up Terraform..."
        terraform version

  # Step 2: Authenticate with GCP (automatic in Cloud Build)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:latest'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        echo "Verifying GCP authentication..."
        gcloud auth list --filter=status:ACTIVE --format="value(account)"
        gcloud config list project --format="value(core.project)"

  # Step 3: Initialize Terraform
  - name: 'hashicorp/terraform:1.5'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        cd /workspace
        echo "Initializing Terraform..."
        terraform init
        
        # Validate configuration
        terraform validate

  # Step 4: Create Terraform plan
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:latest'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        cd /workspace
        
        # Install Terraform
        apt-get update && apt-get install -y unzip wget
        wget https://releases.hashicorp.com/terraform/1.5.0/terraform_1.5.0_linux_amd64.zip
        unzip terraform_1.5.0_linux_amd64.zip
        mv terraform /usr/local/bin/
        chmod +x /usr/local/bin/terraform
        
        # Use service account impersonation (like your previous method)
        gcloud config set auth/impersonate_service_account andrea-tardif-sa@fe-dev-sandbox.iam.gserviceaccount.com
        export GOOGLE_OAUTH_ACCESS_TOKEN=$(gcloud auth print-access-token)
        
        # Databricks will use Google Service Account authentication via OAuth token
        echo "Creating Terraform plan..."
        terraform plan -out=tfplan

  # Step 5: Apply Terraform (conditional on plan success)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:latest'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        cd /workspace
        
        # Install Terraform
        apt-get update && apt-get install -y unzip wget
        wget https://releases.hashicorp.com/terraform/1.5.0/terraform_1.5.0_linux_amd64.zip
        unzip terraform_1.5.0_linux_amd64.zip
        mv terraform /usr/local/bin/
        chmod +x /usr/local/bin/terraform
        
        # Authenticate with GCP using service account impersonation
        gcloud config set auth/impersonate_service_account andrea-tardif-sa@fe-dev-sandbox.iam.gserviceaccount.com
        export GOOGLE_OAUTH_ACCESS_TOKEN=$(gcloud auth print-access-token)
        
        # Databricks will use Google Service Account authentication via OAuth token
        echo "Applying Terraform configuration..."
        terraform apply -auto-approve tfplan
        
        echo "Terraform apply completed successfully!"
        
        # Output the Databricks workspace URL
        echo "Databricks Workspace URL:"
        terraform output databricks_host
