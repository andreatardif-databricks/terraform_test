steps:
  # 0) Bootstrap impersonation (safe to re-run)
  - id: grant-impersonation
    name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
    entrypoint: sh
    args:
      - -lc
      - |
        echo "Initializing impersonation..."
        # grant TokenCreator to Cloud Build SA
        gcloud config set auth/impersonate_service_account andrea-tardif-sa@fe-dev-sandbox.iam.gserviceaccount.com
        export GOOGLE_OAUTH_ACCESS_TOKEN=$(gcloud auth print-access-token)

  # Step 1: Initialize Terraform
  - id: terraform-init
    name: hashicorp/terraform:1.6.6
    entrypoint: sh
    args:
      - -lc
      - |
        echo "Initializing Terraform..."
        terraform init -upgrade

  # Step 2: Validate the Terraform configuration
  - id: terraform-validate
    name: hashicorp/terraform:1.6.6
    entrypoint: sh
    args:
      - -lc
      - |
        echo "Validating Terraform configuration..."
        terraform validate

  # Step 3: Generate Terraform plan and save it to a file
  - id: terraform-plan
    name: hashicorp/terraform:1.6.6
    entrypoint: sh
    args:
      - -lc
      - |
        echo "Running Terraform plan..."
        terraform plan  -input=false -compact-warnings -out=tfplan.out

  # Step 4: Apply the saved plan automatically
  - id: terraform-apply
    name: hashicorp/terraform:1.6.6
    entrypoint: sh
    args:
      - -lc
      - |
        echo "Applying Terraform plan..."
        gcloud config set auth/impersonate_service_account andrea-tardif-sa@fe-dev-sandbox.iam.gserviceaccount.com
        export GOOGLE_OAUTH_ACCESS_TOKEN=$(gcloud auth print-access-token)
        export TF_LOG="DEBUG"
        terraform apply -input=false -auto-approve tfplan.out
